name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform linux/arm64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --push .
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@1
      with:
        task-definition: task-definition.json
        task-definition-family: ${{ vars.TASK_DEFINITION }}
        container-name: ${{ vars.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
        log-configuration-log-driver: awslogs
        log-configuration-options: |
          awslogs-create-group=true
          awslogs-group=${{ vars.LOG_GROUP }},
          awslogs-region=${{ vars.AWS_REGION }}
          awslogs-stream-prefix=${{ vars.LOGS_STREAM_PREFIX }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ vars.ECS_SERVICE }}
        cluster: ${{ vars.ECS_CLUSTER }}
        wait-for-service-stability: true